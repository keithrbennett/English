#!/usr/bin/env ruby

# This script generates a markdown file containing all the English aliases in English.rb, in the form:
# | Alias                    | Built-In |
# | ------------------------ | :------: |
# | $ARGV                    |    $*    |
# | $CHILD_STATUS            |    $?    |
# ...

# Some of the formatting done here is not necessary, but is done to make the generated markdown more readable.

require 'stringio'

class FileParser
  ALIAS_SOURCE_FILESPEC = File.absolute_path(File.join(File.basename(__FILE__), '../lib/English.rb'))

  def self.parse(filespec=ALIAS_SOURCE_FILESPEC)
    lines = File.readlines(filespec) \
      .map(&:strip) \
      .reject { |line| line.start_with?('#') } \
      .select { |line| line.match(/^alias/) }
    tuples = lines.each_with_object([]) do |line, tuples|
      tuples << line.split[1..2]
    end
    tuples.sort
  end
end



class AliasToBuiltinMarkdownTableGenerator
  # Returns a string containing a markdown table of the aliases, with headings "Alias" and "Built-In".
  def self.generate(alias_tuples)
    col1_label = 'Alias'
    col2_label = 'Built-In'

    # a = alias, b = builtin
    col1_length = [alias_tuples.map { |(a, _b)| a.length }.max, col1_label.length].max
    col2_length = [alias_tuples.map { |(_a, b)| b.length }.max, col2_label.length].max

    col1_heading_line = '-' * col1_length
    col2_heading_line = ":#{'-' * (col2_length - 2)}:"

    format_line = ->(item1, item2) do
      "| #{item1.ljust(col1_length)} | #{item2.center(col2_length)} |"
    end

    markdown_string = StringIO.new
    markdown_string << format_line.call(col1_label, col2_label) << "\n"
    markdown_string << format_line.call(col1_heading_line, col2_heading_line) << "\n"
    alias_tuples.each do |(alias_, variable_)|
      markdown_string << format_line.call(alias_, variable_) << "\n"
    end
    markdown_string.string
  end
end

if __FILE__ == $0
  alias_tuples = FileParser.parse
  puts AliasToBuiltinMarkdownTableGenerator.generate(alias_tuples)


end

=begin
Table generated by this script on 2023-07-28:

| Alias                    | Built-In |
| ------------------------ | :------: |
| $ARGV                    |    $*    |
| $CHILD_STATUS            |    $?    |
| $DEFAULT_INPUT           |    $<    |
| $DEFAULT_OUTPUT          |    $>    |
| $ERROR_INFO              |    $!    |
| $ERROR_POSITION          |    $@    |
| $FIELD_SEPARATOR         |    $;    |
| $FS                      |    $;    |
| $IGNORECASE              |    $=    |
| $INPUT_LINE_NUMBER       |    $.    |
| $INPUT_RECORD_SEPARATOR  |    $/    |
| $LAST_MATCH_INFO         |    $~    |
| $LAST_PAREN_MATCH        |    $+    |
| $LAST_READ_LINE          |    $_    |
| $MATCH                   |    $&    |
| $NR                      |    $.    |
| $OFS                     |    $,    |
| $ORS                     |    $\    |
| $OUTPUT_FIELD_SEPARATOR  |    $,    |
| $OUTPUT_RECORD_SEPARATOR |    $\    |
| $PID                     |    $$    |
| $POSTMATCH               |    $'    |
| $PREMATCH                |    $`    |
| $PROCESS_ID              |    $$    |
| $RS                      |    $/    |
=end
